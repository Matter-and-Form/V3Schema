syntax = "proto3";

import "MF/V3/Task.proto";
import "MF/V3/Settings/Camera.proto";
import "MF/V3/Descriptors/Settings/Camera.proto";

package MF.V3;

/**
 * Apply camera settings to one or both cameras.
 * 
 * Example:
 * Request from client:
 * ```
 * {
 *     "Task":{
 *         "Index":1,
 *         "Type":"SetCameras",
 *         "Input":{
 *             "analogGain":256,
 *             "digitalGain":128,
 *             "exposure":18000
 *         },
 *     }
 * }
 * ```
 * Response from server:
 * ```
 * {
 *     "Task":{
 *         "Index":1,
 *         "Type":"SetCameras"
 *         "Input":{
 *             "analogGain":256,
 *             "digitalGain":512,
 *             "exposure":18000
 *         },
 *         "Output":{
 *             "analogGain":{"default":512.0,"max":1024.0,"min":256.0,"value":256.0},
 *             "digitalGain":{"default":256,"max":65536,"min":256,"value":512},
 *             "exposure":{"default":27000,"max":90000,"min":9000,"value":18000},
 *         },
 *         "State":"Completed"
 *     }
 * }
 * ```
 */
message SetCameras
{

// Client request for the `SetCameras` task.
message Request
{
    // A unique identifier generated by the client.
    int32 Index = 1;

    // "SetCameras"
    string Type = 2;

    // Camera settings.
    optional Settings.Camera Input = 3;
}

// Server response for the `SetCameras` task.
message Response
{
    // The unique identifier generated by the client.
    int32 Index = 1;

    // "SetCameras"
    string Type = 2;

    // Requested camera settings.
    optional Settings.Camera Input = 3;

    // Actual camera settings after applying the requested settings.
    optional Descriptors.Settings.Camera Output = 4;

    // The current state of the task.
    optional TaskState State = 5;

    // A string describing the error if the task has failed.
    optional string Error = 6;
}
}