syntax = "proto3";

import "MF/V3/Task.proto";
import "MF/V3/Settings/Smooth.proto";

package MF.V3.Tasks;

/**
 * Smooth a set of scans.
 * 
 * > Request example:
 *
 * ```json
 * {
 *     "Task":{
 *         "Index":1,
 *         "Type":"Smooth",
 *         "Input":{
 *             "selection":{"mode":"visible"},
 *             "taubin":{"iterations": 3, "lambda": 0.5, "mu": -0.53}
 *         }
 *     }
 * }
 * ```
 *
 * > Response example:
 *
 * ```json
 * {
 *     "Task":{
 *         "Index":1,
 *         "Type":"Smooth",
 *         "Input":{
 *             "selection":{"mode":"visible"},
 *             "taubin":{"iterations": 3, "lambda": 0.5, "mu": -0.53}
 *         },
 *         "Output":{[1, 2, 3]},
 *         "State":"Completed"
 *     }
 * }
 * ```
 */
message Smooth
{

// Client request for the `Smooth` task.
message Request
{
    // A unique identifier generated by the client.
    int32 Index = 1;

    // "Smooth"
    string Type = 2;

    // The Smooth settings.
    Settings.Smooth Input = 3;
}

// Server response for the `Smooth` task.
message Response
{
    // The unique identifier generated by the client.
    int32 Index = 1;

    // "Smooth"
    string Type = 2;

    // The requested Smooth settings.
    Settings.Smooth Input = 3;

    // The index of each modified scan.
    repeated int32 Output = 4;

    // The current state of the task.
    optional TaskState State = 5;

    // A string describing the error if the task has failed.
    optional string Error = 6;
}

}
