syntax = "proto3";

import "MF/V3/Task.proto";
import "MF/V3/Settings/Align.proto";
import "MF/V3/Descriptors/Transform.proto";

package MF.V3;

/**
 * Align two scan groups.
 * 
 * Example:
 * Request from client:
 * ```
 * {
 *     "Task":{
 *         "Index":1,
 *         "Type":"Align",
 *         "Input":{
 *             "source":1,
 *             "target":2,
 *             "rough":{"method": "FastGlobal"},
 *             "fine":{"method": "ICP"}
 *         }
 *     }
 * }
 * ```
 * Response from server:
 * ```
 * {
 *     "Task":{
 *         "Index":1,
 *         "Type":"Align",
 *         "Input":{
 *             "source":1,
 *             "target":2,
 *             "rough":{"method": "FastGlobal"},
 *             "fine":{"method": "ICP"}
 *         },
 *         "Output":{
 *             "rotation":[0.2, 0.4, 0.6],
 *             "translation":[11, -10, 24]
 *         },
 *         "State":"Completed"
 *     }
 * }
 * ```
 */
message Align
{

// Client request for the `Align` task.
message Request
{
    // A unique identifier generated by the client.
    int32 Index = 1;

    // "Align"
    string Type = 2;

    // The align settings.
    Settings.Align Input = 3;
}

// Server response for the `Align` task.
message Response
{
    // The unique identifier generated by the client.
    int32 Index = 1;

    // "Align"
    string Type = 2;

    // The requested align settings.
    Settings.Align Input = 3;

    // The transform that aligns the source scan group to the target scan group.
    Descriptors.Transform Output = 4;

    // The current state of the task.
    optional TaskState State = 5;

    // A string describing the error if the task has failed.
    optional string Error = 6;
}

}