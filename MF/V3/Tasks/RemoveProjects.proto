syntax = "proto3";

import "MF/V3/Task.proto";
import "MF/V3/Descriptors/Project.proto";

package MF.V3;

/**
 * Remove selected projects.
 * 
 * > Request example:
 *
 * ```json
 * {
 *     "Task":{
 *         "Index":1,
 *         "Type":"RemoveProjects",
 *         "Input":[1,3,6]  
 *     }
 * }
 * ```
 *
 * > Response example:
 *
 * ```json
 * {
 *     "Task":{
 *         "Index":1,
 *         "Type":"RemoveProjects",
 *         "Input":[1,3,6],
 *         "Output":[
 *             {"index":2,"modified":[2024,5,12,11,23,17],"name":"Project 2","size":35409834},
 *             {"index":4,"modified":[2024,5,12,11,2,37],"name":"Project 4","size":175025367},
 *             {"index":5,"modified":[2024,5,6,17,15,53],"name":"Project 5","size":24314083}
 *         ],
 *         "State":"Completed"
 *     }
 * }
 * ```
 */
message RemoveProjects
{

// Client request for the `RemoveProjects` task.
message Request
{
    // A unique identifier generated by the client.
    int32 Index = 1;

    // "RemoveProjects"
    string Type = 2;

    // The list of indices of the projects to remove.
    repeated int32 Input = 3;
}

// Server response for the `RemoveProjects` task.
message Response
{
    // The unique identifier generated by the client.
    int32 Index = 1;

    // "RemoveProjects"
    string Type = 2;

    // The list of indices of the requested projects to remove.
    repeated int32 Input = 3;

    // Brief descriptors of the remaining projects.
    optional Descriptors.Project.Brief Output = 4;

    // The current state of the task.
    optional TaskState State = 5;

    // A string describing the error if the task has failed.
    optional string Error = 6;
}

}