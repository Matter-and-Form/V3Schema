syntax = "proto3";

import "MF/V3/Task.proto";
import "MF/V3/Descriptors/Export.proto";

package MF.V3;

/**
 * List all export formats and the geometry elements they support.
 * 
 * Example:
 * Request from client:
 * ```
 * {
 *     "Task":{
 *         "Index":1,
 *         "Type":"ListExportFormats"
 *     }
 * }
 * ```
 * Response from server:
 * ```
 * {
 *     "Task":{
 *         "Index":1,
 *         "Type":"ListExportFormats",
 *         "Output":{[
 *             {
 *                 "format": "ply",
 *                 "colors": true,
 *                 "description": "Polygon format",
 *                 "extension": ".ply",
 *                 "faces": ["Point","Triangle","Quad"],
 *                 "normals": true,
 *                 "textures": "Single"
 *             },
 *             {
 *                 "format": "obj",
 *                 "colors": true,
 *                 "description": "Wavefront format",
 *                 "extension": ".obj",
 *                 "faces": ["Point","Triangle","Quad"],
 *                 "normals": true,
 *                 "textures": "Multiple"
 *             },
 *             {
 *                 "format": "stl",
 *                 "colors": false,
 *                 "description": "Stereolithography format",
 *                 "extension": ".stl",
 *                 "faces": ["Point","Triangle"],
 *                 "normals": true,
 *                 "textures": "None"
 *             } 
 *         ]},
 *         "State":"Completed"
 *     }
 * }
 * ```
 */
message ListExportFormats
{

// Client request for the `ListExportFormats` task.
message Request
{
    // A unique identifier generated by the client.
    int32 Index = 1;

    // "ListExportFormats"
    string Type = 2;
}

// Server response for the `ListExportFormats` task.
message Response
{
    // The unique identifier generated by the client.
    int32 Index = 1;

    // "ListExportFormats"
    string Type = 2;

    // The list of export format descriptors.
    repeated Descriptors.Export Output = 3;

    // The current state of the task.
    optional TaskState State = 4;

    // A string describing the error if the task has failed.
    optional string Error = 5;
}

}