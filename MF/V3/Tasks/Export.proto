syntax = "proto3";

import "MF/V3/Task.proto";
import "MF/V3/Settings/Export.proto";

package MF.V3;

/**
 * Export a group of scans.
 * 
 * > Request example:
 *
 * ```json
 * {
 *     "Task":{
 *         "Index":1,
 *         "Type":"Export",
 *         "Input":{
 *             "selection":{"mode":"visible"},
 *             "format":"obj",
 *             "texture":true,
 *             "merge":false
 *         }
 *     }
 * }
 * ```
 *
 * > Export file buffer message from server.
 *
 * ```json
 * {
 *     "Buffer":{
 *         "Index":0,
 *         "Size":8413737,
 *         "Task":{
 *             "Index":1,
 *             "Type":"Export",
 *             "Input":{
 *                 "selection":{"mode":"visible"},
 *                 "format":"obj",
 *                 "texture":true,
 *                 "merge":false
 *             }
 *         }
 *     }
 * }
 * ```
 *
 * > Export file binary data transfer from server [8413737 bytes].
 *
 * > Response from server:
 *
 * ```json
 * {
 *     "Task":{
 *         "Index":1,
 *         "Type":"Export"
 *         "Input":{
 *             "selection":{"mode":"visible"},
 *             "format":"obj",
 *             "texture":true,
 *             "merge":false
 *         },
 *         "State":"Completed"
 *     }
 * }
 * ```
 */
message Export
{

// Client request for the `Export` task.
message Request
{
    // A unique identifier generated by the client.
    int32 Index = 1;

    // "Export"
    string Type = 2;

    // Export settings.
    Settings.Export Input = 3;
}

// Server response for the `Export` task.
message Response
{
    // The unique identifier generated by the client.
    int32 Index = 1;

    // "Export"
    string Type = 2;

    // Requested export settings.
    Settings.Export Input = 3;

    // The current state of the task.
    optional TaskState State = 4;

    // A string describing the error if the task has failed.
    optional string Error = 5;
}

// Server buffer message for the `Export` task.
message Buffer
{
    // The zero-based index identifying the data buffer.
    int32 Index = 1;

    // The size of the incoming data buffer in bytes.
    uint64 Size = 2;

    // The requested Export task.
    Task Task = 3;
}

}