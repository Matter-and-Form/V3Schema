syntax = "proto3";

import "MF/V3/Task.proto";
import "MF/V3/Settings/Projector.proto";
import "MF/V3/Descriptors/Settings/Projector.proto";

package MF.V3.Tasks;

/**
 * Apply projector settings.
 * 
 * > Request example:
 *
 * ```json
 * {
 *     "Task":{
 *         "Index":1,
 *         "Type":"SetProjector"
 *         "Input":{
 *             "on":true,
 *             "brightness":0.75,
 *             "color":[1.0, 1.0, 1.0]
 *         },
 *     }
 * }
 * ```
 *
 * > Response example:
 *
 * ```json
 * {
 *     "Task":{
 *         "Index":1,
 *         "Type":"SetProjector"
 *         "Input":{
 *             "on":true,
 *             "brightness":0.75,
 *             "color":[1.0, 1.0, 1.0]
 *         },
 *         "Output":{
 *             "on":{"default":false,"value":true},
 *             "brightness":{"default":0.5,"max":1.0,"min":0.0,"value":0.75}
 *         },
 *         "State":"Completed"
 *     }
 * }
 * ```
 */
message SetProjector
{

// Client request for the `SetProjector` task.
message Request
{
    // A unique identifier generated by the client.
    int32 Index = 1;

    // "SetProjector"
    string Type = 2;

    // Projector settings.
    optional Settings.Projector Input = 3;
}

// Server response for the `SetProjector` task.
message Response
{
    // The unique identifier generated by the client.
    int32 Index = 1;

    // "SetProjector"
    string Type = 2;

    // Requested projector settings.
    optional Settings.Projector Input = 3;

    // Actual projector settings after applying the requested settings.
    optional Descriptors.Settings.Projector Output = 4;

    // The current state of the task.
    optional TaskState State = 5;

    // A string describing the error if the task has failed.
    optional string Error = 6;
}
}