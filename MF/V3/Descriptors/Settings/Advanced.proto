syntax = "proto3";

import "MF/V3/Settings/Scan.proto";

package MF.V3.Descriptors.Settings;

// Advanced settings descriptor.
message Advanced
{
    // Use advanced settings.
    message Use
    {
        bool value = 1;
        bool default = 2;
    }

    // Capture settings descriptor.
    message Capture
    {
        message HorizontalFrequencies
        {
            repeated int32 value = 1;
            repeated int32 default = 2;
            int32 min = 3;
            int32 max = 4;
        }

        message VerticalFrequencies
        {
            repeated int32 value = 1;
            repeated int32 default = 2;
            int32 min = 3;
            int32 max = 4;
        }

        Use use = 1;
        HorizontalFrequencies horizontalFrequencies = 2;
        VerticalFrequencies verticalFrequencies = 3;
    }

    // Sampling settings descriptor.
    message Sampling
    {
        message ProjectorSampleRate
        {
            float value = 1;
            float default = 2;
            float min = 3;
            float max = 4;
        }

        message ImageSampleRate
        {
            float value = 1;
            float default = 2;
            float min = 3;
            float max = 4;
        }

        // Use sampling settings.
        Use use = 1;
        ProjectorSampleRate projectorSampleRate = 2;
        ImageSampleRate imageSampleRate = 3;
    }

    // Edge detection settings descriptor.
    message EdgeDetection
    {
        message Threshold
        {
            float value = 1;
            float default = 2;
            float min = 3;
            float max = 4;
        }

        message LaplacianKernelRadius
        {
            int32 value = 1;
            int32 default = 2;
            int32 min = 3;
            int32 max = 4;
        }

        message GaussianBlurRadius
        {
            int32 value = 1;
            int32 default = 2;
            int32 min = 3;
            int32 max = 4;
        }

        message GaussianBlurStdDev
        {
            float value = 1;
            float default = 2;
            float min = 3;
            float max = 4;
        }

        message MaximumWidthForProcessing
        {
            int32 value = 1;
            int32 default = 2;
            int32 min = 3;
            int32 max = 4;
        }

        Use use = 1;
        Threshold threshold = 2;
        LaplacianKernelRadius laplacianKernelRadius = 3;
        GaussianBlurRadius gaussianBlurRadius = 4;
        GaussianBlurStdDev gaussianBlurStdDev = 5;
        MaximumWidthForProcessing maximumWidthForProcessing = 6;
    }

    // Phase filter settings descriptor.
    message PhaseFilter
    {
        message KernelRadius
        {
            int32 value = 1;
            int32 default = 2;
            int32 min = 3;
            int32 max = 4;
        }

        message SpatialWeightStdDev
        {
            float value = 1;
            float default = 2;
            float min = 3;
            float max = 4;
        }

        Use use = 1;
        KernelRadius kernelRadius = 2;
        SpatialWeightStdDev spatialWeightStdDev = 3;
    }

    // Adaptive sampling settings descriptor.
    message AdaptiveSampling
    {
        message Type
        {
            V3.Settings.Scan.Processing.AdaptiveSampling.Type value = 1;
            V3.Settings.Scan.Processing.AdaptiveSampling.Type default = 2;
        }

        message Rate
        {
            float value = 1;
            float default = 2;
            float min = 3;
            float max = 4;
        }

        Use use = 1;
        Type type = 2;
        Rate rate = 3;
    }

    // Normal estimation settings descriptor.
    message NormalEstimation
    {
        message Method
        {
            V3.Settings.Scan.Processing.NormalEstimation.Method value = 1;
            V3.Settings.Scan.Processing.NormalEstimation.Method default = 2;
        }

        message MaximumNeighbourCount
        {
            int32 value = 1;
            int32 default = 2;
            int32 min = 3;
            int32 max = 4;
        }

        message MaximumNeighbourRadius
        {
            float value = 1;
            float default = 2;
            float min = 3;
            float max = 4;
        }

        message UseMaximumNeighbourCount
        {
            bool value = 1;
            bool default = 2;
        }

        message UseMaximumNeighbourRadius
        {
            bool value = 1;
            bool default = 2;
        }

        Use use = 1;
        Method method = 2;
        MaximumNeighbourCount maximumNeighbourCount = 3;
        MaximumNeighbourRadius maximumNeighbourRadius = 4;
        UseMaximumNeighbourCount useMaximumNeighbourCount = 5;
        UseMaximumNeighbourRadius useMaximumNeighbourRadius = 6;
    }
    
    // Outlier removal settings descriptor.
    message OutlierRemoval
    {
        message NeighbourCount
        {
            int32 value = 1;
            int32 default = 2;
            int32 min = 3;
            int32 max = 4;
        }

        message NeighbourRadius
        {
            float value = 1;
            float default = 2;
            float min = 3;
            float max = 4;
        }

        Use use = 1;
        NeighbourCount neighbourCount = 2;
        NeighbourRadius neighbourRadius = 3;
    }

    // Remesh settings descriptor.
    message Remesh
    {
        message VoxelSize
        {
            float value = 1;
            float default = 2;
            float min = 3;
            float max = 4;
        }

        message Depth
        {
            int32 value = 1;
            int32 default = 2;
            int32 min = 3;
            int32 max = 4;
        }

        message Scale
        {
            float value = 1;
            float default = 2;
            float min = 3;
            float max = 4;
        }

        message LinearInterpolation
        {
            bool value = 1;
            bool default = 2;
        }

        Use use = 1;
        VoxelSize voxelSize = 2;
        Depth depth = 3;
        Scale scale = 4;
        LinearInterpolation linearInterpolation = 5;
    }
    
    // Camera settings descriptor.
    message Camera
    {
        // Use continuous exposure values settings descriptor.
        message UseContinuousExposureValues
        {
            bool value = 1;
            bool default = 2;
        }
        
        // Use continuous exposure values settings descriptor.
        UseContinuousExposureValues useContinuousExposureValues = 1;
    }
    
    // Turntable settings descriptor.
    message Turntable
    {
        // The angle in degrees to slow down the turntable at the end of a rotation.
        message RampAngle
        {
            int32 value = 1;
            int32 default = 2;
            int32 min = 3;
            int32 max = 4;
        }

        message PointClippingRadius
        {
            double value = 1;
            double default = 2;
            double min = 3;
            double max = 4;
        }

        message PointClippingMinHeight
        {
            double value = 1;
            double default = 2;
            double min = 3;
            double max = 4;
        }

        message PointClippingMaxHeight
        {
            double value = 1;
            double default = 2;
            double min = 3;
            double max = 4;
        }
        
        // Use the advanced turntable settings.
        Use use = 1;

        // The angle in degrees to slow down the turntable at the end of a rotation.
        RampAngle rampAngle = 2;
        
        // The radius of the point clipping cylinder.
        PointClippingRadius pointClippingRadius = 3;

        // The minimum height of the point clipping cylinder.
        PointClippingMinHeight pointClippingMinHeight = 4;

        // The maximum height of the point clipping cylinder.
        PointClippingMaxHeight pointClippingMaxHeight = 5;
    }

    // Capture settings descriptor.
    Capture capture = 1;

    // Sampling settings descriptor.
    Sampling sampling = 2;

    // Edge detection settings descriptor.
    EdgeDetection edgeDetection = 3;

    // Phase filter settings descriptor.
    PhaseFilter phaseFilter = 4;

    // Adaptive sampling settings descriptor.
    AdaptiveSampling adaptiveSampling = 5;

    // Normal estimation settings descriptor.
    NormalEstimation normalEstimation = 6;

    // Outlier removal settings descriptor.
    OutlierRemoval outlierRemoval = 7;

    // Remesh settings descriptor.
    Remesh remesh = 8;
    
    // Camera settings descriptor.
    Camera camera = 9;
    
    // Turntable settings descriptor.
    Turntable turntable = 10;
}
