syntax = "proto3";

package MF.V3.Settings;

// Alignment settings.
message Align
{
    // Point pair alignment settings.
    message Points
    {
        // The set of corresponding point pairs.
        repeated float points = 1;

        // The maximum error for a point pair to be an inlier to the model.
        optional float maximumError = 2;
    }

    // Ransac alignment settings.
    message Ransac
    {
        optional float downsampleVoxelSize = 1;
        optional float maximumFeatureRadius = 2;
        optional int32 maximumFeaturePointCount = 3;
        optional float maximumMatchDistance = 4;
        optional float minimumMatchSimilarity = 5;
        optional bool mutualFilter = 6;
    }

    // Iterative closest point alignment settings.
    message ICP
    {
        // The maximum distance for two points to be considered a match.
        float matchDistance = 1;
    }

    // Rough alignment settings.
    message Rough
    {
        // Rough alignment methods.
        enum Method
        {
            // No rough alignment.
            None = 0;

            // Fast global alignment.
            FastGlobal = 1;

            // Ransac alignment.
            Ransac = 2;

            // Point pair alignment.
            Points = 3;
        }

        // Rough alignment method.
        Method method = 1;

        // FastGlobal fastGlobal;
        optional Align.Ransac ransac = 2;

        // Point pair alignment settings.
        optional Align.Points points = 3;
    }

    // Fine alignment settings.
    message Fine
    {
        // Fine alignment methods.
        enum Method
        {
            // No fine alignment.
            None = 0;

            // Iterative closest point alignment.
            ICP = 1;
        }

        message Transform
        {
            repeated double rotation = 1;
            repeated double translation = 2;
        }

        // Fine alignment method.
        Method method = 1;

        // Iterative closest point settings.
        optional Align.ICP icp = 2;

        // The initial transform for fine alignment.
        optional Transform initialTransform = 3;
    }

    // Index of the scan or group to align.
    int32 source = 1;

    // Index of the scan or group to align to.
    int32 target = 2;

    // Rough alignment settings.
    optional Rough rough = 3;

    // Fine alignment settings.
    optional Fine fine = 4;
}
